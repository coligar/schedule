import Head from 'next/head'
import Image from 'next/image'
import styles from '../styles/Home.module.css'
import { useState } from 'react';
import { prisma } from '../lib/prisma';
import axios from 'axios'
import { useGetData } from '../hooks/useRequest';
import ActivityForm from '../components/form/activities/activityForm';
import UserSimpleForm from '../components/form/users/userSimpleForm';
import ActivityFormList from '../components/form/activities/activityFormList';
import UsersSimpleList from '../components/form/users/usersSimpleList';
import { toast } from 'react-toastify';
import useSWR, { mutate, SWRConfig } from 'swr';

interface IUser
{
  email: string;
  name: string;
  role?: string;
  avatar?: string;
}

interface IGetUserData
{
  onClick: (data:IUser) => void
}

interface IGetActivityAreas
{
  onClick: (data:any) => void
}


export async function getServerSideProps()
{
  const users = await prisma.user.findMany()
  //const users = axios.get('http://localhost:3000/api/user/').then((res) => res.data)
  const schedule = await prisma.schedule.findMany()
  const activity = await prisma.areaActivity.findMany()
  return{
    props:{
      schedule: JSON.parse(JSON.stringify(schedule)),
      activity: JSON.parse(JSON.stringify(activity)),
      fallback:{
        '/api/user':JSON.stringify(users),
        '/api/activity':JSON.stringify(activity),
      }
    }
  }
}



export default function Home(props:any, fallback:any)
{
  const [agendas, setAgenda] = useState(props.schedule)
  const [users, setUsers] = useState(props.users)
  const [activityArea, setActivityArea] = useState()
  const [dataUser, setDataUser] = useState<IUser>()
  const {data: schedule} = useGetData('api/schedule')
  //const {data: activity} = useGetData('api/activity')
  //const {data: users} = useGetData('api/user')

  const loading = 'loading'

  const getUserData = (data: IUser) => 
  {
    setDataUser(data)
  }

  const getActivityArea = (data:any) =>
  {
    setActivityArea(data)
  }


  return (
    <div className={styles.container}>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className={styles.main}>
        <h1 className={styles.title}>
          Página de integração de funcionalidades
        </h1>

        <p className={styles.description}>
          Listagem e cadastro{' '}
          <code className={styles.code}>pages/index.tsx</code>
        </p>

        <div className={styles.grid}>
         
          <a
            href="#"
            rel="noopener noreferrer"
            className={styles.card}
          >
            <h2>Agenda</h2>
            <ul>
              {((!schedule || schedule === undefined) &&
                <li>Carregando</li>
              )}
              { (schedule && schedule !== undefined) &&
                schedule.map((agenda:any) =>(
                  <li key={agenda.id}>{agenda.day}</li>
                ))
              }
            </ul>
          </a>

          <div className={styles.card}>
            <SWRConfig value={fallback}>
              <ActivityFormList onClick={getActivityArea}/>
            </SWRConfig>

            <ActivityForm url='api/activity' type='POST' dados={activityArea}/>
          </div>

          <div className={styles.card}>
            <SWRConfig value={fallback}>
              <UsersSimpleList onClick={getUserData}/>
            </SWRConfig>
           
            <UserSimpleForm url='api/user' type='POST' dados={dataUser}/>
          </div>

        </div>

        
      </main>

      <footer className={styles.footer}>
        <a
          href="https://vercel.com?utm_source=create-next-app&utm_medium=default-template&utm_campaign=create-next-app"
          target="_blank"
          rel="noopener noreferrer"
        >
          Powered by{' '}
          <span className={styles.logo}>
            <Image src="/vercel.svg" alt="Vercel Logo" width={72} height={16} />
          </span>
        </a>
      </footer>
    </div>
  )
}


